body {
  background-color: orange;
  font-family: sans-serif;
  * { box-sizing: border-box;}

  $primaryColor: black;
  $dkBg: #303947;
  $itemBg: #6788a7;
  $itemBgOdd: darken(#6788a7,15%);
}
  .side-scroll-item + .side-scroll-item {
    margin-left: 60px;
  }

  html, body {
    font-family: "Arial", sans-serif;
    background: #fff;
    padding: 80px 30px 30px;
    color: #444;
    height: 100%;
  }

  ol, ul {
    margin: 0 0 50px 0;
  }

  h1 {
    font-weight: bold;
    color: black;
    background-image: url('honeycomb-scaled.png');
  }

  p {
    background-image: url('honeycomb-scaled.png');
    line-height: 1.6em;
    margin-bottom: 10px;
    font-size: 18px;
    padding: 0;
    &:last-child {
      margin-bottom: 40px;
    }
  }

  code {
    background: #d4ca3d;
    color: #d64f9b;
    border: 1px solid #eee;
    padding: 2px;
    border-radius: 3px;
  }

  a {
    font-weight: bold;
    color: $primaryColor; 
    text-decoration: none;
    transition: all 200ms;
    &:hover,
    &:focus{
      color: black;
    }
  }

  article {
    background-image: url('honeycomb-scaled.png');
    min-height: 50vh;
    margin-bottom: 50px;
    .margin {
      margin-bottom: 100vh;
    }
  }

  nav {
    display: flex;
    width: 100%;
    top: 0;
    left: 0;
    background: black;
    position: fixed;
    padding: 0px;
    a {
      display: inline-flex;
      padding: 20px 30px;
      color: #fff;
      text-decoration: none;
      &:hover,
      &:focus {
        color: yellow;
      }
      &.active {
        color: $primaryColor;
      }
    }
  }




@import 'compass/css3';

@font-face {
  src: url('https://assets.codepen.io/4175254/DIN2014-DemiBold.ttf') format('truetype');
  font-family: 'DIN 2014';
  font-weight: 600;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  min-height: 100dvh;
  background-color: #1c1c1c;
}

.button {
  --bevel: 3px;
  --border-width: 3px;
  font-family: 'DIN 2014';
  font-weight: 600;
  color: #1d2119;
  filter: drop-shadow(1px 1px 1px rgba(0, 0, 0, .95));
  min-width: 10em;
}

.button-outline {
  --bevel-1: calc((var(--bevel) + (var(--border-width)) * 2) - ((var(--border-width) * #{tan(22.5deg)})) * 2);
  --bevel-2: calc(var(--bevel-1) + var(--border-width));
  --bevel-3: calc(var(--bevel-2) + var(--border-width));
  display: block;
  margin-top: calc(var(--border-width) * -1);
  margin-left: calc(var(--border-width) * -1);
  padding: var(--border-width);
  background-color: #fff;
  clip-path: polygon(
    var(--bevel-2) var(--border-width),
    calc(100% - var(--bevel-2)) var(--border-width),
    100% var(--bevel-3),
    100% calc(100% - var(--bevel-1)),
    calc(100% - var(--bevel-1)) 100%,
    var(--bevel-3) 100%,
    var(--border-width) calc(100% - var(--bevel-2)),
    var(--border-width) var(--bevel-2)
  );
  transition-property: clip-path;
  transition-duration: .2s;
  
  .button:hover:not(:active) &,
  .button:focus-visible:not(:active) & {
    clip-path: polygon(
      var(--bevel-1) 0,
      calc(100% - var(--bevel-3)) 0,
      100% var(--bevel-3),
      100% calc(100% - var(--bevel-1)),
      calc(100% - var(--bevel-1)) 100%,
      var(--bevel-3) 100%,
      0 calc(100% - var(--bevel-3)),
      0 var(--bevel-1)
    );
  }
}

.button-shadow {
  --padding: calc(var(--border-width) * 2);
  --bevel-1: calc((var(--bevel) + var(--border-width)) - (var(--border-width) * #{tan(22.5deg)}));
  --bevel-2: calc(var(--bevel-1) + var(--border-width));
  --bevel-3: calc(var(--bevel-2) + var(--border-width));
  display: block;
  padding: calc(var(--border-width) * 2) var(--padding) var(--padding) calc(var(--border-width) * 2) ;
  background-color: #1d2119;
  clip-path: polygon(
    var(--bevel-2) var(--border-width),
    calc(100% - var(--bevel-2)) var(--border-width),
    100% var(--bevel-3),
    100% calc(100% - var(--bevel-1)),
    calc(100% - var(--bevel-1)) 100%,
    var(--bevel-3) 100%,
    var(--border-width) calc(100% - var(--bevel-2)),
    var(--border-width) var(--bevel-2)
  );
  transition-property: clip-path;
  transition-duration: .2s;
  
  .button:hover:not(:active) &,
  .button:focus-visible:not(:active) & {
    clip-path: polygon(
      var(--bevel-1) 0,
      calc(100% - var(--bevel-3)) 0,
      100% var(--bevel-3),
      100% calc(100% - var(--bevel-1)),
      calc(100% - var(--bevel-1)) 100%,
      var(--bevel-3) 100%,
      0 calc(100% - var(--bevel-3)),
      0 var(--bevel-1)
    );
  }
}

.button-inside {
  --padding-vertical: 6px;
  display: block;
  padding: var(--padding-vertical) 24px calc(var(--padding-vertical) - .125em);
  background-color: #fff;
  clip-path: polygon(
    var(--bevel) 0,
    calc(100% - var(--bevel)) 0,
    100% var(--bevel),
    100% calc(100% - var(--bevel)),
    calc(100% - var(--bevel)) 100%,
    var(--bevel) 100%,
    0 calc(100% - var(--bevel)),
    0 var(--bevel)
  );
  text-align: center;
  transition-property: transform;
  transition-duration: .2s;
  
  .button:hover:not(:active) &,
  .button:focus-visible:not(:active) & {
    transform: translate(calc(var(--border-width) * -1), calc(var(--border-width) * -1));
  }
  
  .button:hover &,
  .button:focus-visible & {
    background-color: #fcd200;
    background-image: 
      linear-gradient(to right, transparent, rgba(252, 210, 0, .9)),
      radial-gradient(#fff60d 1px, transparent 0),
      radial-gradient(#fff60d 1px, transparent 0);
    background-size: auto, 6px 6px, 6px 6px;
    background-position: 0 0, 0 0, 3px 3px;
    animation: scroll-background 1s linear infinite;
  }
}

@keyframes scroll-background {
  to {
    background-position-x: 0, -6px, -3px;
  }
}

.button-text-characters-container {
  display: inline-block;
  transform: skewX(-6deg);
}

.button-text-character {
  display: inline-block;
  
  .button:hover:not(:active) &,
  .button:focus-visible:not(:active) & {
    animation: jump 4s cubic-bezier(.75, .25, 1, 2) var(--delay) infinite;
  }
}

@keyframes jump {
  5% {
    transform: translateY(-.125em);
  }
  10% {
    transform: translateY(0);   
  }
}
